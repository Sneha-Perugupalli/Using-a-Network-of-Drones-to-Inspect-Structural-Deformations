package Software_V2
public
	with Software;
	
	process SoftSys extends Software::SoftSys
		features
			inPort: in data port;
			outPort: out data port;
	end SoftSys;

	process implementation SoftSys.least extends Software::SoftSys.least
		subcomponents
			this_DV: refined to thread;
			this_cameraAPI: subprogram CameraAPI;
			this_monitoring: subprogram monitoringSoftware;
			this_ImgRec: subprogram Img_Recognition;
			this_FC: subprogram FlightControl_API;
			this_CC: subprogram Drone_Commmunication_Coordination;
			this_GPS: subprogram GPS;
		annex agree {**
			eq k : int = 1 -> if (pre(k) >= 2) then 1 else 1;
			assert(outPort = k);
		**};
	end SoftSys.least;

	thread DataValidator
		properties
			Stack_Size => 1000 Mbyte;
			Period => 20ms;
			Compute_Execution_Time => 8ms .. 10ms;
	end DataValidator;
	
	subprogram CameraAPI
		properties
			Stack_Size => 1000 Mbyte;
			Compute_Execution_Time => 10ms .. 12ms;
	end CameraAPI;

	subprogram monitoringSoftware
	end monitoringSoftware;
	
	subprogram Img_Recognition
	end Img_Recognition;
	
	subprogram FlightControl_API
	end FlightControl_API;
	
	subprogram Drone_Commmunication_Coordination
		properties
			Stack_Size => 2000 Mbyte;
			Compute_Execution_Time => 15ms .. 20ms;
	end Drone_Commmunication_Coordination;
	
	subprogram GPS
		properties
		Compute_Execution_Time => 15ms .. 20ms;
	end GPS;
	
	thread implementation DataValidator.impl
	end DataValidator.impl;

	subprogram implementation CameraAPI.impl
	end CameraAPI.impl;
	
	subprogram implementation Img_Recognition.impl
	end Img_Recognition.impl;

	subprogram implementation monitoringSoftware.impl
	end monitoringSoftware.impl;
	
	subprogram implementation FlightControl_API.impl
	end FlightControl_API.impl;
	
	subprogram implementation Drone_Commmunication_Coordination.impl
	end Drone_Commmunication_Coordination.impl;
	
	subprogram implementation GPS.impl
	end GPS.impl;

end Software_V2;